{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\de180587\\\\slot2\\\\exercise_1-5\\\\src\\\\AverageAgeByOccupation.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AverageAgeByOccupation() {\n  const people = [{\n    name: \"Alice\",\n    age: 25,\n    occupation: \"Engineer\"\n  }, {\n    name: \"Bob\",\n    age: 22,\n    occupation: \"Doctor\"\n  }, {\n    name: \"Charlie\",\n    age: 30,\n    occupation: \"Engineer\"\n  }, {\n    name: \"David\",\n    age: 28,\n    occupation: \"Doctor\"\n  }, {\n    name: \"Eva\",\n    age: 35,\n    occupation: \"Artist\"\n  }];\n\n  // Nhóm người theo nghề và tính độ tuổi trung bình\n  const getAverageAges = list => {\n    const occupationGroups = {};\n    list.forEach(({\n      age,\n      occupation\n    }) => {\n      if (!occupationGroups[occupation]) {\n        occupationGroups[occupation] = {\n          totalAge: 0,\n          count: 0\n        };\n      }\n      occupationGroups[occupation].totalAge += age;\n      occupationGroups[occupation].count += 1;\n    });\n\n    // Tính trung bình\n    const averageByOccupation = {};\n    for (const [occupation, {\n      totalAge,\n      count\n    }] of Object.entries(occupationGroups)) {\n      averageByOccupation[occupation] = (totalAge / count).toFixed(2); // giữ 2 chữ số thập phân\n    }\n    return averageByOccupation;\n  };\n  const averages = getAverageAges(people);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tu\\u1ED5i trung b\\xECnh theo ngh\\u1EC1 nghi\\u1EC7p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(averages).map(([occupation, avgAge]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [occupation, \": \", avgAge, \" tu\\u1ED5i\"]\n      }, occupation, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = AverageAgeByOccupation;\nexport default AverageAgeByOccupation;\nvar _c;\n$RefreshReg$(_c, \"AverageAgeByOccupation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AverageAgeByOccupation","people","name","age","occupation","getAverageAges","list","occupationGroups","forEach","totalAge","count","averageByOccupation","Object","entries","toFixed","averages","children","fileName","_jsxFileName","lineNumber","columnNumber","map","avgAge","_c","$RefreshReg$"],"sources":["D:/react/de180587/slot2/exercise_1-5/src/AverageAgeByOccupation.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction AverageAgeByOccupation() {\r\n  const people = [\r\n    { name: \"Alice\", age: 25, occupation: \"Engineer\" },\r\n    { name: \"Bob\", age: 22, occupation: \"Doctor\" },\r\n    { name: \"Charlie\", age: 30, occupation: \"Engineer\" },\r\n    { name: \"David\", age: 28, occupation: \"Doctor\" },\r\n    { name: \"Eva\", age: 35, occupation: \"Artist\" },\r\n  ];\r\n\r\n  // Nhóm người theo nghề và tính độ tuổi trung bình\r\n  const getAverageAges = (list) => {\r\n    const occupationGroups = {};\r\n\r\n    list.forEach(({ age, occupation }) => {\r\n      if (!occupationGroups[occupation]) {\r\n        occupationGroups[occupation] = { totalAge: 0, count: 0 };\r\n      }\r\n      occupationGroups[occupation].totalAge += age;\r\n      occupationGroups[occupation].count += 1;\r\n    });\r\n\r\n    // Tính trung bình\r\n    const averageByOccupation = {};\r\n    for (const [occupation, { totalAge, count }] of Object.entries(occupationGroups)) {\r\n      averageByOccupation[occupation] = (totalAge / count).toFixed(2); // giữ 2 chữ số thập phân\r\n    }\r\n\r\n    return averageByOccupation;\r\n  };\r\n\r\n  const averages = getAverageAges(people);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tuổi trung bình theo nghề nghiệp</h2>\r\n      <ul>\r\n        {Object.entries(averages).map(([occupation, avgAge]) => (\r\n          <li key={occupation}>\r\n            {occupation}: {avgAge} tuổi\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AverageAgeByOccupation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,sBAAsBA,CAAA,EAAG;EAChC,MAAMC,MAAM,GAAG,CACb;IAAEC,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAW,CAAC,EAClD;IAAEF,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC9C;IAAEF,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAW,CAAC,EACpD;IAAEF,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAS,CAAC,EAChD;IAAEF,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAS,CAAC,CAC/C;;EAED;EACA,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/B,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAE3BD,IAAI,CAACE,OAAO,CAAC,CAAC;MAAEL,GAAG;MAAEC;IAAW,CAAC,KAAK;MACpC,IAAI,CAACG,gBAAgB,CAACH,UAAU,CAAC,EAAE;QACjCG,gBAAgB,CAACH,UAAU,CAAC,GAAG;UAAEK,QAAQ,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAE,CAAC;MAC1D;MACAH,gBAAgB,CAACH,UAAU,CAAC,CAACK,QAAQ,IAAIN,GAAG;MAC5CI,gBAAgB,CAACH,UAAU,CAAC,CAACM,KAAK,IAAI,CAAC;IACzC,CAAC,CAAC;;IAEF;IACA,MAAMC,mBAAmB,GAAG,CAAC,CAAC;IAC9B,KAAK,MAAM,CAACP,UAAU,EAAE;MAAEK,QAAQ;MAAEC;IAAM,CAAC,CAAC,IAAIE,MAAM,CAACC,OAAO,CAACN,gBAAgB,CAAC,EAAE;MAChFI,mBAAmB,CAACP,UAAU,CAAC,GAAG,CAACK,QAAQ,GAAGC,KAAK,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE;IAEA,OAAOH,mBAAmB;EAC5B,CAAC;EAED,MAAMI,QAAQ,GAAGV,cAAc,CAACJ,MAAM,CAAC;EAEvC,oBACEF,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCrB,OAAA;MAAAiB,QAAA,EACGJ,MAAM,CAACC,OAAO,CAACE,QAAQ,CAAC,CAACM,GAAG,CAAC,CAAC,CAACjB,UAAU,EAAEkB,MAAM,CAAC,kBACjDvB,OAAA;QAAAiB,QAAA,GACGZ,UAAU,EAAC,IAAE,EAACkB,MAAM,EAAC,YACxB;MAAA,GAFSlB,UAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACG,EAAA,GA5CQvB,sBAAsB;AA8C/B,eAAeA,sBAAsB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}