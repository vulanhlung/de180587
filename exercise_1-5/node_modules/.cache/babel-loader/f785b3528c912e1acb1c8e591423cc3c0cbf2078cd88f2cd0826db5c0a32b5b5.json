{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\de180587\\\\slot2\\\\exercise_1-5\\\\src\\\\GroupByOccupation.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupPeople() {\n  const people = [{\n    name: \"Alice\",\n    age: 25,\n    occupation: \"Engineer\"\n  }, {\n    name: \"Bob\",\n    age: 22,\n    occupation: \"Doctor\"\n  }, {\n    name: \"Charlie\",\n    age: 30,\n    occupation: \"Engineer\"\n  }, {\n    name: \"David\",\n    age: 28,\n    occupation: \"Doctor\"\n  }, {\n    name: \"Eva\",\n    age: 35,\n    occupation: \"Artist\"\n  }];\n\n  // Nhóm theo nghề nghiệp\n  const groupByOccupation = list => {\n    return list.reduce((acc, person) => {\n      const {\n        occupation\n      } = person;\n      if (!acc[occupation]) {\n        acc[occupation] = [];\n      }\n      acc[occupation].push(person);\n      return acc;\n    }, {});\n  };\n  const groupedPeople = groupByOccupation(people);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Danh s\\xE1ch theo NGH\\u1EC0 NGHI\\u1EC6P\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), Object.entries(groupedPeople).map(([occupation, group], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: occupation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: group.map((person, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [person.name, \" - \", person.age, \" - \", person.occupation]\n        }, `${occupation}-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = GroupPeople;\nexport default GroupPeople;\nvar _c;\n$RefreshReg$(_c, \"GroupPeople\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GroupPeople","people","name","age","occupation","groupByOccupation","list","reduce","acc","person","push","groupedPeople","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","group","index","idx","_c","$RefreshReg$"],"sources":["D:/react/de180587/slot2/exercise_1-5/src/GroupByOccupation.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction GroupPeople() {\r\n  const people = [\r\n    { name: \"Alice\", age: 25, occupation: \"Engineer\" },\r\n    { name: \"Bob\", age: 22, occupation: \"Doctor\" },\r\n    { name: \"Charlie\", age: 30, occupation: \"Engineer\" },\r\n    { name: \"David\", age: 28, occupation: \"Doctor\" },\r\n    { name: \"Eva\", age: 35, occupation: \"Artist\" },\r\n  ];\r\n\r\n  // Nhóm theo nghề nghiệp\r\n  const groupByOccupation = (list) => {\r\n    return list.reduce((acc, person) => {\r\n      const { occupation } = person;\r\n      if (!acc[occupation]) {\r\n        acc[occupation] = [];\r\n      }\r\n      acc[occupation].push(person);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const groupedPeople = groupByOccupation(people);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Danh sách theo NGHỀ NGHIỆP</h2>\r\n      {Object.entries(groupedPeople).map(([occupation, group], index) => (\r\n        <div key={index}>\r\n          <h3>{occupation}</h3>\r\n          <ul>\r\n            {group.map((person, idx) => (\r\n              <li key={`${occupation}-${idx}`}>\r\n                {person.name} - {person.age} - {person.occupation}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupPeople;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAMC,MAAM,GAAG,CACb;IAAEC,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAW,CAAC,EAClD;IAAEF,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC9C;IAAEF,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAW,CAAC,EACpD;IAAEF,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAS,CAAC,EAChD;IAAEF,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAS,CAAC,CAC/C;;EAED;EACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAClC,OAAOA,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;MAClC,MAAM;QAAEL;MAAW,CAAC,GAAGK,MAAM;MAC7B,IAAI,CAACD,GAAG,CAACJ,UAAU,CAAC,EAAE;QACpBI,GAAG,CAACJ,UAAU,CAAC,GAAG,EAAE;MACtB;MACAI,GAAG,CAACJ,UAAU,CAAC,CAACM,IAAI,CAACD,MAAM,CAAC;MAC5B,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;EAED,MAAMG,aAAa,GAAGN,iBAAiB,CAACJ,MAAM,CAAC;EAE/C,oBACEF,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClCC,MAAM,CAACC,OAAO,CAACP,aAAa,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACf,UAAU,EAAEgB,KAAK,CAAC,EAAEC,KAAK,kBAC5DtB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKR;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjB,OAAA;QAAAa,QAAA,EACGQ,KAAK,CAACD,GAAG,CAAC,CAACV,MAAM,EAAEa,GAAG,kBACrBvB,OAAA;UAAAa,QAAA,GACGH,MAAM,CAACP,IAAI,EAAC,KAAG,EAACO,MAAM,CAACN,GAAG,EAAC,KAAG,EAACM,MAAM,CAACL,UAAU;QAAA,GAD1C,GAAGA,UAAU,IAAIkB,GAAG,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE3B,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GARGK,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACO,EAAA,GAxCQvB,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}